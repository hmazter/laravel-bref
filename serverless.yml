service: laravel-bref

provider:
  name: aws
  region: eu-north-1
  stage: ${opt:stage, 'dev'} # defaults to dev, can be overridden with --stage <stage> on the commandline
  runtime: provided

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'dynamodb:GetItem'
        - 'dynamodb:PutItem'
      Resource:
        - !GetAtt Cache.Arn

  environment:
    APP_ENV: production
    APP_KEY: "base64:+iTro5CgvnG6vFjPo06vGEpyBZHIezyuTfVcU/LDN7c="
    APP_STORAGE: /tmp
    # Store cache in a DynamoDB table
    CACHE_DRIVER: dynamodb
    DYNAMODB_CACHE_TABLE: !Ref Cache
    # Log to stderr to get CloudWatch Logs to pick it up
    LOG_CHANNEL: stderr
    # Store session in a DynamoDB table
    SESSION_DRIVER: dynamodb
    SESSION_STORE: dynamodb
    VIEW_COMPILED_PATH: /tmp/storage/framework/views

plugins:
  - ./vendor/bref/bref

package:
  excludeDevDependencies: false
  exclude:
    - ./**
  include:
    - app/**
    - bootstrap/**
    - config/**
    - database/**
    - public/index.php
    - resources/lang/**
    - resources/views/**
    - routes/**
    - vendor/**
    - artisan

functions:
  website:
    handler: public/index.php
    description: ''
    memorySize: 2048
    timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
    layers:
      - ${bref:layer.php-74-fpm}
    events:
      # Using HTTP API
      - httpApi: '*'

resources:
  Resources:
    Cache:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: laravel-bref-${self:provider.stage}-cache
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
